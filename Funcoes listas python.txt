============================
 FUNÇÕES E MÉTODOS DE LISTAS
============================

1. append(x)
   ➤ Adiciona o elemento x ao final da lista.
   Exemplo: lista.append(10)

2. extend(iterável)
   ➤ Adiciona todos os elementos de um iterável (como outra lista) ao final.
   Exemplo: lista.extend([1, 2, 3])

3. insert(i, x)
   ➤ Insere o elemento x na posição i.
   Exemplo: lista.insert(1, 99)

4. remove(x)
   ➤ Remove a primeira ocorrência do elemento x.
   Exemplo: lista.remove(5)

5. pop([i])
   ➤ Remove e retorna o elemento no índice i (ou o último se i não for especificado).
   Exemplo: lista.pop() ou lista.pop(2)

6. clear()
   ➤ Remove todos os elementos da lista.
   Exemplo: lista.clear()

7. index(x[, start[, end]])
   ➤ Retorna o índice da primeira ocorrência do elemento x.
   Exemplo: lista.index(3)

8. count(x)
   ➤ Conta quantas vezes o elemento x aparece na lista.
   Exemplo: lista.count(2)

9. sort(key=None, reverse=False)
   ➤ Ordena a lista em ordem crescente (ou decrescente se reverse=True).
   Exemplo: lista.sort() ou lista.sort(reverse=True)

10. sorted(lista)
    ➤ Retorna uma nova lista ordenada (não altera a original).
    Exemplo: nova_lista = sorted(lista)

11. reverse()
    ➤ Inverte os elementos da lista.
    Exemplo: lista.reverse()

12. len(lista)
    ➤ Retorna o número de elementos da lista.
    Exemplo: len(lista)

13. sum(lista)
    ➤ Retorna a soma dos elementos (se forem números).
    Exemplo: sum(lista)

14. min(lista)
    ➤ Retorna o menor valor.
    Exemplo: min(lista)

15. max(lista)
    ➤ Retorna o maior valor.
    Exemplo: max(lista)

16. in
    ➤ Verifica se um elemento está presente na lista.
    Exemplo: if 5 in lista: ...

17. list()
    ➤ Construtor que cria uma lista a partir de um iterável.
    Exemplo: list("abc") → ['a', 'b', 'c']

18. enumerate(lista)
    ➤ Retorna um iterador com índices e valores.
    Exemplo: for i, valor in enumerate(lista): ...

19. zip(lista1, lista2)
    ➤ Combina duas ou mais listas em tuplas.
    Exemplo: list(zip([1,2], ['a','b'])) → [(1, 'a'), (2, 'b')]

20. list comprehension
    ➤ Forma rápida de criar listas.
    Exemplo: [x*2 for x in range(5)] → [0, 2, 4, 6, 8]

============================
